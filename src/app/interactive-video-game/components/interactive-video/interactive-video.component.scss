
.playpause {

    label {
      display: block;
      box-sizing: border-box;
      width: 0;
      height: 5vh;
      border-color: transparent transparent transparent #CDCDCD;
      transition: 100ms all ease;
      cursor: pointer;
      border-style: double;
      border-width: 0px 0 0px 5vh;
    }
    input[type="checkbox"] {
      position: absolute;
      left: -9999px;
      &:checked + label {
        border-style: solid;
        border-width: 3vh 0 3vh 5vh;
      }
    }
  }

  
  .movement-button {
    width: 0;
    height: 0;
    border-style: solid;
    border-width: 20px 0 20px 30px;
    border-color: transparent transparent transparent #CDCDCD;
    position: absolute;
    margin:0 2vh;
}



.foward-container {
    position: relative; width:8vh; height: 5vh;
}


.rewind-container {
    @extend .foward-container;
    transform: rotateY(180deg);
}



::ng-deep {



.custom-slider .ngx-slider .ngx-slider-selection {
    background: orange;
}


  .custom-slider .ngx-slider .ngx-slider-pointer {
    width: 17px;
    height: 17px;
    top: auto; /* to remove the default positioning */
    bottom: 0;
    background-color: crimson;
    border-radius: 50%;
    top:-1vh;

  }

  .custom-slider .ngx-slider .ngx-slider-tick {
    width: 1px;
    height: 10px;
    border-radius: 0;
    background: #ffe4d1;
    top: -1px;
  }

  .custom-slider .ngx-slider .ngx-slider-left-out-selection {
    background: crimson;

  }

  .custom-slider .ngx-slider .ngx-slider-pointer:after {
    display: none;
  }
  

  input[type=number] {
    color: transparent; /*hide input value*/
  }
  
  input[type=number]::placeholder {
    color: black; /*change placeholder color*/
    font-weight: bold;
  }
}